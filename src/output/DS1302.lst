C51 COMPILER V9.00   DS1302                                                                07/23/2014 19:54:00 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\output\DS1302.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\DS1302.c BROWSE DEBUG OBJECTEXTEND PRINT(.\output\DS1302.lst) OBJECT(.\
                    -output\DS1302.obj)

line level    source

   1          #include<reg52.h>
   2          #include"MacroAndConst.h"
   3          #include"intrins.h"
   4          
   5          
   6          #define DS1302_SECOND_W 0x80
   7          #define DS1302_MINUTE_W 0x82
   8          #define DS1302_HOUR_W   0x84
   9          #define DS1302_DATE_W   0x86
  10          #define DS1302_MONTH_W  0x88
  11          #define DS1302_WEEK_W   0x8a
  12          #define DS1302_YEAR_W   0x8c
  13          
  14          #define DS1302_SECOND_R 0x81
  15          #define DS1302_MINUTE_R 0x83
  16          #define DS1302_HOUR_R   0x85
  17          #define DS1302_DATE_R   0x87
  18          #define DS1302_MONTH_R  0x89
  19          #define DS1302_WEEK_R   0x8b
  20          #define DS1302_YEAR_R   0x8d
  21          
  22          //clock burst mode
  23          #define DS1302_CLOCK_BURST_R    0xbf
  24          #define DS1302_CLOCK_BURST_W    0xbe
  25          //RAM burst mode
  26          #define DS1302_RAM_BURST_R      0xff
  27          #define DS1302_RAM_BURST_W      0xfe
  28          
  29          sbit DS1302_SCLK=P2^0;
  30          sbit DS1302_IO=P2^1;
  31          sbit DS1302_RST=P2^2;
  32          
  33          /*为了提高效率，我觉得不必要使用结构体
  34          struct
  35          {
  36                  unsigned char Second;
  37                  unsigned char Minute;
  38                  unsigned char Hour;
  39                  unsigned char Date;
  40                  unsigned char Month;
  41                  unsigned char Week;
  42                  unsigned char Year; 
  43          }CurrentTime;
  44          */
  45          unsigned char TimeBuf1[9]={0,0,'-',0,0,'-',0,0,' '};//hour,minute,second;
  46          unsigned char TimeBuf2[9]={0,0,'-',0,0,'-',0,0,' '};//year,month,date
  47          unsigned char TimeBuf3[9]={'-','-','-','-','-','-','-',0,' '};
  48          
  49          static void DS1302Write(unsigned char content)
  50          {
  51   1              uchar i;
  52   1              for(i=8;i>0;i--)
  53   1              {
  54   2                      _nop_();_nop_();
C51 COMPILER V9.00   DS1302                                                                07/23/2014 19:54:00 PAGE 2   

  55   2                      if(content&0x01)
  56   2                      {
  57   3                              DS1302_IO=1;    
  58   3                      }
  59   2                      else
  60   2                      {
  61   3                              DS1302_IO=0;
  62   3                      }
  63   2                      content>>=1;
  64   2      
  65   2                      DS1302_SCLK=1;
  66   2                      DS1302_SCLK=0;
  67   2              }
  68   1      }
  69          
  70          static uchar DS1302Read(void)
  71          {
  72   1              uchar i,ReadValue;
  73   1              //DS1302_IO=1;
  74   1              _nop_();_nop_();
  75   1              for(i=8;i>0;i--)
  76   1              {
  77   2                      ReadValue>>=1;
  78   2                      _nop_();_nop_();_nop_();_nop_();
  79   2                      if(DS1302_IO==1)
  80   2                      {
  81   3                              ReadValue|=0x80;
  82   3                      }
  83   2                      else
  84   2                      {
  85   3                              ReadValue&=0x7f;
  86   3                      }
  87   2                      DS1302_SCLK=1;
  88   2                      _nop_();_nop_();
  89   2                      DS1302_SCLK=0;
  90   2                      _nop_();_nop_();
  91   2              }
  92   1              return ReadValue;
  93   1      }
  94          
  95          void DS1302WriteByte(uchar address,uchar content)
  96          {
  97   1              DS1302_RST=0;
  98   1              DS1302_SCLK=0;
  99   1              DS1302_RST=1;
 100   1      
 101   1              DS1302Write(address);
 102   1              DS1302Write(content);
 103   1      
 104   1              DS1302_RST=0;
 105   1              DS1302_SCLK=1;
 106   1      }
 107          
 108          unsigned char DS1302ReadByte(uchar address)
 109          {
 110   1              uchar ReadValue;
 111   1              DS1302_RST=0;
 112   1              DS1302_SCLK=0;
 113   1              DS1302_RST=1;
 114   1      
 115   1              DS1302Write(address);
 116   1              ReadValue=DS1302Read();
C51 COMPILER V9.00   DS1302                                                                07/23/2014 19:54:00 PAGE 3   

 117   1      
 118   1              DS1302_RST=0;
 119   1              DS1302_SCLK=1;
 120   1      
 121   1              return ReadValue;
 122   1      }
 123          
 124          void DS1302_ClockInit()
 125          {
 126   1              if(DS1302ReadByte(0xc1)!=0xf0)//在没有电池的情况下，这句要
 127   1              {                                                               //注释掉，因为断电后无法初始化                          
 128   2                                                                              //这是我调试2小时的经验啊。sjf
 129   2                      DS1302WriteByte(0x8e,0x00);//写保护，允许写
 130   2                      DS1302WriteByte(DS1302_YEAR_W,0x14);
 131   2                      DS1302WriteByte(DS1302_MONTH_W,0x06);
 132   2                      DS1302WriteByte(DS1302_DATE_W,0x05);
 133   2                      
 134   2                      DS1302WriteByte(DS1302_WEEK_W,0x04);
 135   2                      DS1302WriteByte(DS1302_HOUR_W,0x10);
 136   2                      DS1302WriteByte(DS1302_MINUTE_W,0x20);
 137   2                      DS1302WriteByte(DS1302_SECOND_W,0x30);
 138   2      
 139   2                      //DS1302WriteByte(0x90,0xa5);//涓流充电对于普通的锂电池不可充电
 140   2                      DS1302WriteByte(0xc0,0xf0);
 141   2                      DS1302WriteByte(0x8e,0x80);//写保护，不允许写
 142   2              }
 143   1      }
 144          
 145          void DS1302_SetTime_HMS(uchar hour,uchar minute,uchar second)
 146          {
 147   1              DS1302WriteByte(0x8e,0x00);//写保护，允许写
 148   1              DS1302WriteByte(DS1302_HOUR_W,hour);
 149   1              DS1302WriteByte(DS1302_MINUTE_W,minute);
 150   1              DS1302WriteByte(DS1302_SECOND_W,second);
 151   1              DS1302WriteByte(0x8e,0x80);//写保护，不允许写
 152   1      }
 153          
 154          void DS1302_SetTime_YMD(uchar year,uchar month,uchar day)
 155          {
 156   1              DS1302WriteByte(0x8e,0x00);//写保护，允许写
 157   1              DS1302WriteByte(DS1302_YEAR_W,year);
 158   1              DS1302WriteByte(DS1302_MONTH_W,month);
 159   1              DS1302WriteByte(DS1302_DATE_W,day);
 160   1              DS1302WriteByte(0x8e,0x80);//写保护，不允许写
 161   1      }
 162          
 163          void DS1302_SetTime_WEEK(unsigned char week)
 164          {
 165   1              DS1302WriteByte(0x8e,0x00);//写保护，允许写
 166   1              DS1302WriteByte(DS1302_WEEK_W,week);
 167   1              DS1302WriteByte(0x8e,0x80);//写保护，不允许写           
 168   1      }
 169          
 170          void DS1302_ClockUpdata_SMH(unsigned char* pLedCode)
 171          {
 172   1              unsigned char Second,Minute,Hour;
 173   1      
 174   1              Second=DS1302ReadByte(DS1302_SECOND_R);
 175   1              Minute=DS1302ReadByte(DS1302_MINUTE_R);
 176   1              Hour=DS1302ReadByte(DS1302_HOUR_R);
 177   1      
 178   1              pLedCode[0]=Hour>>4;
C51 COMPILER V9.00   DS1302                                                                07/23/2014 19:54:00 PAGE 4   

 179   1              pLedCode[1]=Hour&0x0f;
 180   1              pLedCode[2]='-';
 181   1              pLedCode[3]=Minute>>4;
 182   1              pLedCode[4]=Minute&0x0f;
 183   1              pLedCode[5]='-';
 184   1              pLedCode[6]=Second>>4;
 185   1              pLedCode[7]=Second&0x0f;
 186   1      }
 187          void DS1302_ClockUpdata_DMY(unsigned char* pLedCode)
 188          {
 189   1              unsigned char Date,Month,Year;
 190   1      
 191   1              Date=DS1302ReadByte(DS1302_DATE_R);
 192   1              Month=DS1302ReadByte(DS1302_MONTH_R);
 193   1              Year=DS1302ReadByte(DS1302_YEAR_R);
 194   1              
 195   1              pLedCode[0]=Year>>4;
 196   1              pLedCode[1]=Year&0x0f;
 197   1              pLedCode[2]='-';
 198   1              pLedCode[3]=Month>>4;
 199   1              pLedCode[4]=Month&0x0f;
 200   1              pLedCode[5]='-';
 201   1              pLedCode[6]=Date>>4;
 202   1              pLedCode[7]=Date&0x0f;          
 203   1      }
 204          
 205          void DS1302_ClockUpdata_WEEK(unsigned char* pBuffer)
 206          {
 207   1              pBuffer[7]=DS1302ReadByte(DS1302_WEEK_R);
 208   1              switch(pBuffer[7])
 209   1              {
 210   2                      case 1:
 211   2                      {
 212   3                              pBuffer[0]='M';
 213   3                              pBuffer[1]='m';
 214   3                              pBuffer[2]=0;
 215   3                              pBuffer[3]='N';
 216   3                      }break;
 217   2      
 218   2                      case 2:
 219   2                      {
 220   3                              pBuffer[0]='T';
 221   3                              pBuffer[1]='U';
 222   3                              pBuffer[2]=14;
 223   3                              pBuffer[3]=5;
 224   3                      }break;
 225   2      
 226   2                      case 3:
 227   2                      {
 228   3                              pBuffer[0]='W';
 229   3                              pBuffer[1]='w';
 230   3                              pBuffer[2]=14;
 231   3                              pBuffer[3]=13;
 232   3                      }break;
 233   2      
 234   2                      case 4:
 235   2                      {
 236   3                              pBuffer[0]='T';
 237   3                              pBuffer[1]='H';
 238   3                              pBuffer[2]='U';
 239   3                              pBuffer[3]='R';
 240   3                      }break;
C51 COMPILER V9.00   DS1302                                                                07/23/2014 19:54:00 PAGE 5   

 241   2      
 242   2                      case 5:
 243   2                      {
 244   3                              pBuffer[0]=15;
 245   3                              pBuffer[1]='R';
 246   3                              pBuffer[2]='I';
 247   3                              pBuffer[3]='-';
 248   3                      }break;
 249   2      
 250   2                      case 6:
 251   2                      {
 252   3                              pBuffer[0]=5;
 253   3                              pBuffer[1]=10;
 254   3                              pBuffer[2]='T';
 255   3                              pBuffer[3]='-';
 256   3                      }break;
 257   2      
 258   2                      case 7:
 259   2                      {
 260   3                              pBuffer[0]=5;
 261   3                              pBuffer[1]='U';
 262   3                              pBuffer[2]='N';
 263   3                              pBuffer[3]='-';
 264   3                      }break;
 265   2                      default:break;
 266   2              }                       
 267   1      }
 268          /*
 269          void DS1302_ClockBurstRead(unsigned char* pSegFlaBuf)
 270          {
 271                  unsigned char Second,Minute,Hour,Date,Month,Week,Year;
 272                  DS1302WriteByte(0x8e,0x00);
 273                  
 274                  DS1302_RST=1;
 275                  DS1302Write(DS1302_CLOCK_BURST_R);
 276          
 277                  Second=DS1302Read();
 278                  Minute=DS1302Read();
 279                  Hour=DS1302Read();
 280                  Date=DS1302Read();
 281                  Month=DS1302Read();
 282                  Week=DS1302Read();
 283                  Year=DS1302Read();
 284                  
 285                  DS1302_RST=0;
 286          
 287                  DS1302WriteByte(0x8e,0x80);
 288                                                  
 289          }
 290          
 291          
 292          
 293          /*
 294          void DS1302_ClockBurstWrite(unsigned char* pContent)
 295          {
 296                  DS1302WriteByte(0x8e,0x00);
 297                  DS1302_RST=1;
 298                  DS1302Write(DS1302_CLOCK_BURST_W);
 299                  DS1302Write(pContent[0]);
 300                  DS1302Write(pContent[1]);
 301                  DS1302Write(pContent[2]);
 302                  DS1302Write(pContent[3]);
C51 COMPILER V9.00   DS1302                                                                07/23/2014 19:54:00 PAGE 6   

 303                  DS1302Write(pContent[4]);
 304                  DS1302Write(pContent[5]);
 305                  DS1302Write(pContent[6]);
 306                  DS1302Write(pContent[7]);
 307                  DS1302_RST=0;
 308                  DS1302WriteByte(0x8e,0x80);
 309          }
 310          */
 311          
 312          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    691    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
